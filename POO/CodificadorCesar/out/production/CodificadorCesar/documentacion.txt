Creamos la clase Codificador, la cual tiene dos atributos: 
    - El string textoOriginal, donde se almacena el string a codificar
    - Un array de char que contiene el alfabeto

Codificador tiene dos constructores: 
    - Uno que no recibe argumentos e inicializa textoOriginal como ""
    - Otro que recibe un string y lo almacena en textoOriginal

La clase tiene un getter y un setter para textoOriginal y otros dos métodos llamados "codificaDecodifica" y "cambio".

codificaDecodifica: 
    Recibe un int "iLlave" el cual es el número de posiciones que va a avanzar o retroceder cada carácter de mi string

    Primero que nada, declaro mis dos variables: 
        - textArr es mi String textoOriginal pero convertido a un array para poder iterarlo, esto lo consigo usando el método .toCharArray
        - Mi segunda variable es un int "index", el cual me va a ser útil más tarde

    Usando un bucle, formateo iLlave para evitar que sea un número muy grande, de ésta manera, siempre y cuando me pasen un número mayor a la longitud de el array alfabeto, le resto ésta longitud.
    Con esto consigo que siempre que me pase de la longitud, vuelva al principio, o si me quedo corto, vuelva al final del array, dejándome así un número más pequeño con el cual es más fácil trabajar

    Por ejemplo: la longitud de mi array alfabeto es de 26(0-25), si me pasan iLlave=27, a mi me conviene redefinirlo a iLlave=1. Si me pasan iLlave=-1, me conviene redefinirlo a iLlave=25. Con iLlave ya formateado, puedo empezar a hacer la codificación

    Uso un doble bucle for, con el primero itero por cada letra de textArr, y por cada una la comparo con cada letra de alfabeto usando un if en el segundo bucle for.
    En caso de que el if sea cierto, y por lo tanto, la letra de mi textArr sea igual a la de alfabeto, intento el cambio. Pero no lo hago dentro del propio bucle for, ya que eso podría resultar en un error que rompa el programa. El cambio lo intento en mi segundo método, "cambio".

    Dicho método recibe 3 parámetros:
        - Mi array textArr
        - Un int i, el cual es la posición en la que me encuentro de textArr
        - Mi int index, el cual es la posición en la que me encuentro de alfabeto + iLlave
    
    El método "cambio" devuelve un boolean y contiene únicamente una estructura try-catch en la que intenta cambiar textArr[i] por alfabeto[index]. Si falla, puede ser porque index exceda el rango de alfabeto, o porque se quede corto. 
    Para manejar esto, dentro del primer if de mis bucles for, tengo otros dos if donde compruebo que se pueda hacer el cambio: 
        - Si falla porque excede el rango, vuelvo a intentarlo restándole a index la longitud de alfabeto
        - Si falla porque se queda corto, vuelvo a intentarlo sumándole a index la longitud de alfabeto
    
    Una vez que el cambio está hecho, corto el segundo for con un break para evitar problemas y pasamos a la siguiente letra de textArr

    Al final, la función re-convierte mi textArr a un String ya codificado y lo devuelve

En un archivo aparte, creamos una clase Main con un método main donde hemos ido creando objetos y poniendo a prueba todas las funcionalidades